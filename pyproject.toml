[tool.poetry]
name = "liftlens"
version = "0.1.1"
description = "An Enterprise-grade A/B Testing Framework with CUPED, SRM, Sequential Testing, FastAPI, Streamlit"
authors = ["Dare Afolabi <dare.afolabi@outlook.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["liftlens", "A/B test", "statistics", "causal-inference", "cuped", "sequential-testing"]
homepage = "https://github.com/dare-afolabi/liftlens"
repository = "https://github.com/dare-afolabi/liftlens"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Education",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial"
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
pandas = "^2.2"
numpy = "^1.26"
scipy = "^1.13"
statsmodels = "^0.14"
pydantic = "^2.7"
pydantic-settings = "^2.3"
typer = { version = "^0.12.0", extras = ["all"] }
click = ">=8.1.7,<9.0"
fastapi = "^0.111"
uvicorn = { version = "^0.29", extras = ["standard"] }
streamlit = "^1.34"
plotly = "^5.21"
jinja2 = "^3.1"
weasyprint = "^62.1"
pandera = "^0.19"
sqlalchemy = "^2.0"
psycopg2-binary = "^2.9"
pyarrow = "^16.0"
joblib = "^1.4"
loguru = "^0.7"
python-dotenv = "^1.0"
ruff = "^0.14.2"
black = "^24.4"
mypy = "^1.10"
pytest = "^8.2"
pytest-cov = "^5.0"
retrying = "^1.3"
dask = { version = "^2024.5", extras = ["dataframe"], optional = true }
ray = { version = "^2.21", extras = ["default"], optional = true }
mkdocs = { version = "^1.6", optional = true }
mkdocs-material = { version = "^9.5", optional = true }
mkdocstrings = { version = "^0.25", extras = ["python"], optional = true }

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7"
mypy = "^1.10"
black = "^24.4"
twine = "^6.2"
build = "^1.3"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6"
mkdocs-material = "^9.5"
mkdocstrings = { version = "^0.25", extras = ["python"] }

[tool.poetry.group.test.dependencies]
pytest = "^8.2"
pytest-cov = "^5.0"
httpx = "^0.27"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP", "S", "BLE"]
ignore = ["E501", "B008", "S101"]
fixable = ["ALL"]
unfixable = []
exclude = ["tests/fixtures"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
strict = true
exclude = ["tests", "docs"]
ignore_missing_imports = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=liftlens --cov-report=xml"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: integration tests"
]
filterwarnings = [
    "ignore::DeprecationWarning:pydyf.*",
    "ignore::FutureWarning:pandas.*",
    "ignore::PendingDeprecationWarning:starlette.*"
]
