name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    env:
      PYTHONPATH: src

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry and dependencies
        run: |
          pip install poetry
          poetry env use ${{ matrix.python-version }}
          poetry config virtualenvs.create true
          poetry install --with dev --no-interaction

      - name: Lint (ruff)
        run: poetry run ruff check .

      - name: Type check (mypy)
        run: poetry run mypy src --pretty

      - name: Run tests
        run: poetry run pytest -q

      - name: Build distributions
        run: poetry run python -m build --sdist --wheel

      - name: Validate distributions (twine check)
        run: |
          poetry run python -m pip install twine
          poetry run python -m twine check dist/*
